"aedac20e2e6956748f93d68d46789697f0f567ab"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-5-face))) . 1733) (undo-tree-id164 . -1) (1731 . 1733) (1730 . 1732) (#("(" 0 1 (fontified nil)) . -1730) (1720 . 1731) (t 23088 20521 37036 466000)) nil (23088 20584 975322 250000) 0 nil]) ((#(" === \"/auth/facebook\"" 0 5 (fontified t) 5 21 (fontified t face font-lock-string-face)) . 1721) (undo-tree-id155 . 21) (undo-tree-id156 . -20) (undo-tree-id157 . -20) (undo-tree-id158 . -20) (undo-tree-id159 . -20) 1741) nil (23088 20521 8822 408000) 0 nil]) ((1720 . 1721)) nil (23088 20521 8826 522000) 0 nil]) ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . 1712) (undo-tree-id160 . 1) (undo-tree-id161 . 1) (undo-tree-id162 . -1)) nil (23088 20521 8831 880000) 0 nil]) ((1711 . 1713) (#("(" 0 1 (fontified nil)) . -1711) (1706 . 1712) (#("." 0 1 (fontified t)) . -1706) (undo-tree-id163 . -1) 1707 (1699 . 1707) (t 23088 20284 674087 284000)) nil (23088 20521 8835 516000) 0 nil]) ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1483) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1473) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1426) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1396) 1492) nil (23088 20284 638701 591000) 0 nil]) ((1395 . 1396) (t 23088 20211 468577 841000)) nil (23088 20284 638706 668000) 0 nil]) ((1672 . 1798) (1623 . 1666) (#("	res.redirect('/login');
" 0 13 (fontified t) 13 14 (fontified t face (rainbow-delimiters-depth-4-face)) 14 22 (fontified t face font-lock-string-face) 22 23 (fontified t face (rainbow-delimiters-depth-4-face)) 23 24 (fontified t) 24 25 (fontified t)) . 1623) (undo-tree-id83 . -25) (undo-tree-id84 . -25) (undo-tree-id85 . 1) (undo-tree-id86 . 2) (undo-tree-id87 . 2) (undo-tree-id88 . -23) (undo-tree-id89 . -23) (undo-tree-id90 . -23) (undo-tree-id91 . -25) (1529 . 1610) (#("    if(req.session.passport){
	if(req.session.passport.user){
	    next();
	} else {
	    console.log('this should never go');
	}
    } else if(req.path === '/login' || req.path === '/auth/facebook'){
	next();
" 0 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t face (rainbow-delimiters-depth-3-face)) 7 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-3-face)) 28 29 (fontified t face (rainbow-delimiters-depth-3-face)) 29 30 (fontified t) 30 31 (fontified t) 31 33 (fontified t face font-lock-keyword-face) 33 34 (fontified t face (rainbow-delimiters-depth-4-face)) 34 59 (fontified t) 59 60 (fontified t face (rainbow-delimiters-depth-4-face)) 60 61 (fontified t face (rainbow-delimiters-depth-4-face)) 61 62 (fontified t) 62 71 (fontified t) 71 72 (fontified t face (rainbow-delimiters-depth-5-face)) 72 73 (fontified t face (rainbow-delimiters-depth-5-face)) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t face (rainbow-delimiters-depth-4-face)) 77 78 (fontified t) 78 82 (fontified t face font-lock-keyword-face) 82 83 (fontified t) 83 84 (fontified t face (rainbow-delimiters-depth-4-face)) 84 85 (fontified t) 85 101 (fontified t) 101 102 (fontified t face (rainbow-delimiters-depth-5-face)) 102 124 (fontified t face font-lock-string-face) 124 125 (fontified t face (rainbow-delimiters-depth-5-face)) 125 126 (fontified t) 126 127 (fontified t) 127 128 (fontified t) 128 129 (fontified t face (rainbow-delimiters-depth-4-face)) 129 130 (fontified t) 130 134 (fontified t) 134 135 (fontified t face (rainbow-delimiters-depth-3-face)) 135 136 (fontified t) 136 140 (fontified t face font-lock-keyword-face) 140 141 (fontified t) 141 143 (fontified t face font-lock-keyword-face) 143 144 (fontified t face (rainbow-delimiters-depth-3-face)) 144 157 (fontified t) 157 165 (fontified t face font-lock-string-face) 165 182 (fontified t) 182 197 (fontified t face font-lock-string-face) 197 198 (fontified t face font-lock-string-face) 198 199 (fontified t face (rainbow-delimiters-depth-3-face)) 199 200 (fontified t face (rainbow-delimiters-depth-3-face)) 200 201 (fontified t) 201 206 (fontified t) 206 207 (fontified t face (rainbow-delimiters-depth-4-face)) 207 208 (fontified t face (rainbow-delimiters-depth-4-face)) 208 209 (fontified t) 209 210 (fontified t)) . 1529) (undo-tree-id92 . -62) (undo-tree-id93 . -62) (undo-tree-id94 . -75) (undo-tree-id95 . -75) (undo-tree-id96 . -85) (undo-tree-id97 . -85) (undo-tree-id98 . -127) (undo-tree-id99 . -127) (undo-tree-id100 . -130) (undo-tree-id101 . -130) (undo-tree-id102 . -201) (undo-tree-id103 . -201) (undo-tree-id104 . -210) (undo-tree-id105 . -210) (undo-tree-id106 . -34) (undo-tree-id107 . -34) (undo-tree-id108 . -58) (undo-tree-id109 . -30) (undo-tree-id110 . -30) (undo-tree-id111 . -34) (undo-tree-id112 . -210)) nil (23088 20211 426813 435000) 0 nil]) ((1775 . 1776) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1775) (1774 . 1775) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1774) (1767 . 1774) (1766 . 1768) (#("'" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -1766) (1766 . 1767) (1765 . 1767) (#("(" 0 1 (fontified nil)) . -1765) (1754 . 1766) (#("e" 0 1 (fontified t)) . -1754) (undo-tree-id113 . -1) (#("d" 0 1 (fontified t)) . -1755) (undo-tree-id114 . -1) 1756 (1753 . 1756) (1752 . 1753) (1752 . 1753) 1755) nil (23088 20211 426822 206000) 0 nil]) ((1751 . 1756) (1750 . 1752) (#("{" 0 1 (fontified nil)) . -1750) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (1744 . 1751)) nil (23088 20211 426826 856000) 0 nil]) ((1737 . 1738) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1737) (1736 . 1737) (1735 . 1737) (#("(" 0 1 (fontified nil)) . -1735) (1732 . 1736) (1731 . 1732) (1730 . 1731) (1730 . 1731) 1733) nil (23088 20211 426829 838000) 0 nil]) ((1729 . 1734) (1728 . 1730) (#("{" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -1728) (1728 . 1729) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1728) (1727 . 1728) (#(" " 0 1 (fontified nil)) . -1727) (1727 . 1728) (#(")" 0 1 (fontified nil face font-lock-string-face)) . -1727) (1727 . 1728) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1727) (1726 . 1727) (#(" " 0 1 (fontified nil)) . -1726) (1726 . 1727) (#("'" 0 1 (fontified nil face font-lock-string-face)) . -1726) (1716 . 1727) (1712 . 1716) (#("a" 0 1 (fontified t face font-lock-string-face)) . -1712) (undo-tree-id117 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -1713) (undo-tree-id118 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1714) (undo-tree-id119 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -1715) (undo-tree-id120 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -1716) (undo-tree-id121 . -1) 1717 (1712 . 1717) (1711 . 1713) (#("'" 0 1 (fontified nil)) . -1711) (1696 . 1712) (1693 . 1696) (#("'" 0 1 (fontified t face font-lock-string-face)) . -1693) (undo-tree-id122 . -1) 1694 (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1694) (1693 . 1694) (#(" " 0 1 (fontified nil)) . -1693) (1693 . 1694) (#("'" 0 1 (fontified nil face font-lock-string-face)) . -1693) (1687 . 1694) (#("l" 0 1 (fontified t face font-lock-string-face)) . -1687) (undo-tree-id123 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1688) (undo-tree-id124 . -1) (#("g" 0 1 (fontified t face font-lock-string-face)) . -1689) (undo-tree-id125 . -1) 1690 (1687 . 1690) (1686 . 1688) (#("'" 0 1 (fontified nil)) . -1686) (1673 . 1687) (1672 . 1674) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -1672) (1670 . 1673) (#("{" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -1670) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (#("
    }" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-3-face))) . 1671) (undo-tree-id129 . 1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (#("
" 0 1 (fontified t)) . -1671) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#("	" 0 1 (fontified t)) . -1672) (undo-tree-id135 . -1) 1673 (1672 . 1673) (1672 . 1673) 1675) nil (23088 20211 426862 499000) 0 nil]) ((1671 . 1676) (1670 . 1672) (#("{" 0 1 (fontified nil)) . -1670) (1665 . 1671)) nil (23088 20211 426870 555000) 0 nil]) ((1654 . 1655) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-5-face))) . 1654) (1653 . 1654) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1653) (1640 . 1653) (1632 . 1640) (1631 . 1633) (#("'" 0 1 (fontified nil face (rainbow-delimiters-depth-5-face))) . -1631) (1631 . 1632) (1630 . 1632) (#("(" 0 1 (fontified nil)) . -1630) (1619 . 1631) (1614 . 1619) (1614 . 1615)) nil (23088 20211 426874 264000) 0 nil]) ((1613 . 1615) (1612 . 1614) (#("{" 0 1 (fontified nil)) . -1612) (1612 . 1613) (#("P" 0 1 (fontified t)) . -1612) (undo-tree-id136 . -1) 1613 (1606 . 1613)) nil (23088 20211 426877 864000) 0 nil]) ((1563 . 1588) 1562) nil (23088 20211 426879 260000) 0 nil]) ((#("req.session.passport.user" 0 25 (fontified t)) . 1563) (undo-tree-id137 . -1) 1564) nil (23088 20211 426880 735000) 0 nil]) ((#("else" 0 4 (fontified t face font-lock-keyword-face)) . 1613)) nil (23088 20211 426881 803000) 0 nil]) ((1612 . 1617) (#("
" 0 1 (fontified t)) . -1612) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (#(" " 0 1 (fontified t)) . -1613) (undo-tree-id141 . -1) (#(" " 0 1 (fontified t)) . -1614) (undo-tree-id142 . -1) (#(" " 0 1 (fontified t)) . -1615) (undo-tree-id143 . -1) (#(" " 0 1 (fontified t)) . -1616) (undo-tree-id144 . -1) 1617 (1612 . 1617) 1611) nil (23088 20211 426889 260000) 0 nil]) ((1602 . 1603) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-5-face))) . 1602) (1601 . 1602) (1600 . 1602) (#("(" 0 1 (fontified nil)) . -1600) (1598 . 1601) (#("t" 0 1 (fontified t)) . -1598) (undo-tree-id145 . -1) (#("x" 0 1 (fontified t)) . -1599) (undo-tree-id146 . -1) 1600 (1596 . 1600) (1591 . 1596) (1591 . 1592)) nil (23088 20211 426894 539000) 0 nil]) ((1590 . 1592) (1589 . 1591) (#("{" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -1589) (1589 . 1590) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . 1589) (1581 . 1589) (1563 . 1581) (1562 . 1564) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -1562) (1560 . 1563) (1559 . 1560) (1559 . 1560) 1562) nil (23088 20211 426898 736000) 0 nil]) ((1558 . 1563) (1557 . 1559) (#("{" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -1557) (1557 . 1558) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1557) (undo-tree-id147 . 1) (1556 . 1557) (#(" " 0 1 (fontified nil)) . -1556) (1556 . 1557) (#(")" 0 1 (fontified nil)) . -1556) (1536 . 1557)) nil (23088 20211 426902 712000) 0 nil]) ((1774 . 1777) (1743 . 1746) (1729 . 1732) (1714 . 1717) (1705 . 1708) (1668 . 1671) (1636 . 1639) (1600 . 1603) (1590 . 1593) (1540 . 1543) 1748) nil (23088 20211 426906 35000) 0 nil]) ((#("!" 0 1 (fontified t)) . -1536) (undo-tree-id148 . -1) 1537 (1536 . 1537) (1535 . 1537) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -1535) (1533 . 1536) (1528 . 1533) 1527) nil (23088 20211 426908 996000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1528) (undo-tree-id149 . -1) (#(" " 0 1 (fontified t)) . -1529) (undo-tree-id150 . -1) (#(" " 0 1 (fontified t)) . -1530) (undo-tree-id151 . -1) (#(" " 0 1 (fontified t)) . -1531) (undo-tree-id152 . -1) (#(" " 0 1 (fontified t)) . -1532) (undo-tree-id153 . -1) 1533 (1529 . 1533) (1529 . 1530) 1531) nil (23088 20211 426915 4000) 0 nil]) ((#("  req.session.passport = req.session.passport || {};
" 0 2 (fontified t) 2 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-3-face)) 50 51 (fontified t face (rainbow-delimiters-depth-3-face)) 51 53 (fontified t)) . 1576)) nil (23088 20211 426917 145000) 0 nil]) ((1498 . 1499)) nil (23088 20211 426917 923000) 0 nil]) ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1792) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1788) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1760) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1749) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1737) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1731) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1697) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1668) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1635) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1628) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1575) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1528) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1498) (undo-tree-id154 . 3)) nil (23088 20211 426921 743000) 0 nil] [nil nil ((1967 . 1970) (1927 . 1930) (1898 . 1901) (1874 . 1877) (1864 . 1867) (1854 . 1857) (1820 . 1823) (1803 . 1806) (1785 . 1788) (1773 . 1776) (1733 . 1736) (1698 . 1701) (1659 . 1662) (1646 . 1649) (1587 . 1590) (1534 . 1537) (1498 . 1501) 1919) ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1498) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1534) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1587) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1646) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1659) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1698) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1733) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1773) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1785) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1803) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1820) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1854) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1864) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1874) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1898) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1927) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1967)) (23088 19962 924414 503000) 0 nil]) ((1491 . 1494) (1478 . 1481) (1428 . 1431) (1395 . 1398) 1482 (t 23088 19714 493227 508000)) nil (23088 19962 925339 702000) 0 nil]) ((1425 . 1486) (#("    console.log(req.session.passport, req.path);
    next();
})
" 0 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-3-face)) 16 46 (fontified t) 46 47 (fontified t face (rainbow-delimiters-depth-3-face)) 47 49 (fontified t) 49 57 (fontified t) 57 58 (fontified t face (rainbow-delimiters-depth-3-face)) 58 59 (fontified t face (rainbow-delimiters-depth-3-face)) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t face (rainbow-delimiters-depth-2-face)) 62 63 (fontified t face (rainbow-delimiters-depth-1-face)) 63 64 (fontified t)) . 1425) (undo-tree-id68 . -64) (undo-tree-id69 . -64) (undo-tree-id70 . -61) (undo-tree-id71 . -61) (undo-tree-id72 . -49) (undo-tree-id73 . -49) (undo-tree-id74 . 4) (undo-tree-id75 . -64) (undo-tree-id76 . -64) (undo-tree-id77 . 5) (undo-tree-id78 . 5) (undo-tree-id79 . -59) (undo-tree-id80 . -59) (undo-tree-id81 . -59) (undo-tree-id82 . -64)) nil (23088 19714 454736 630000) 0 nil]) ((1484 . 1485) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1484) (1483 . 1484) (1482 . 1484) (#("(" 0 1 (fontified nil)) . -1482) (1478 . 1483) (1473 . 1478) (1472 . 1473) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1472) (1468 . 1472) (1450 . 1468) (1441 . 1450) (1440 . 1442) (#("(" 0 1 (fontified nil)) . -1440) (1429 . 1441) (1425 . 1429) (1425 . 1426)) nil (23088 19714 454744 292000) 0 nil]) ((1424 . 1425) (1423 . 1425) (#("{" 0 1 (fontified nil)) . -1423) (1419 . 1424) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 1419) (1404 . 1419) (1403 . 1405) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -1403) (1403 . 1404) (1402 . 1404) (#("(" 0 1 (fontified nil)) . -1402) (1395 . 1403)) nil (23088 19714 454749 455000) 0 nil]) ((1726 . 1729) (1719 . 1722) (1688 . 1691) (1674 . 1677) (1659 . 1662) (1650 . 1653) (1613 . 1616) (1581 . 1584) (1545 . 1548) (1535 . 1538) (1479 . 1482) (1429 . 1432) (1396 . 1399) 1690 (t 23088 19516 309846 819000)) nil (23088 19714 454754 231000) 0 nil]) ((1426 . 1473) (#("    console.log(req.session.passport, req.path);
" 0 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-3-face)) 16 46 (fontified t) 46 47 (fontified t face (rainbow-delimiters-depth-3-face)) 47 49 (fontified t)) . 1426) (undo-tree-id54 . -49) (undo-tree-id55 . -49) (undo-tree-id56 . 3) (undo-tree-id57 . -27) (undo-tree-id58 . -16) (undo-tree-id59 . 3) (undo-tree-id60 . -16) (undo-tree-id61 . -26) (undo-tree-id62 . 4) (undo-tree-id63 . 4) (undo-tree-id64 . -45) (undo-tree-id65 . -45) (undo-tree-id66 . -45) (undo-tree-id67 . -49)) nil (23088 19516 280807 729000) 0 nil]) ((1463 . 1472) (1428 . 1430) (1451 . 1461) (t 23088 19329 166375 865000)) nil (23088 19516 280812 106000) 0 nil]) ((1426 . 1454) (#("    console.log(req.session);
" 0 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-3-face)) 16 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-3-face)) 28 29 (fontified t) 29 30 (fontified t)) . 1426) (undo-tree-id43 . -30) (undo-tree-id44 . -30) (undo-tree-id45 . 1) (undo-tree-id46 . 2) (undo-tree-id47 . 2) (undo-tree-id48 . -28) (undo-tree-id49 . -28) (undo-tree-id50 . -28) (undo-tree-id51 . -30)) nil (23088 19329 136619 324000) 0 nil]) ((1454 . 1455) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 1454) (1451 . 1454) (1442 . 1451) (1441 . 1443) (#("(" 0 1 (fontified nil)) . -1441) (1430 . 1442) (#("r" 0 1 (fontified t)) . -1430) (undo-tree-id52 . -1) (#("e" 0 1 (fontified t)) . -1431) (undo-tree-id53 . -1) 1432 (1430 . 1432) (1426 . 1430) (1426 . 1427) 1440 (t 23088 19268 894097 242000)) nil (23088 19329 136626 879000) 0 nil]) ((1519 . 1582) (#("	  req.path === \"/login\" ||
	  req.path === \"/auth/facebook\"
" 0 3 (fontified t) 3 16 (fontified t) 16 24 (fontified t face font-lock-string-face) 24 28 (fontified t) 28 44 (fontified t) 44 60 (fontified t face font-lock-string-face) 60 61 (fontified t)) . 1519) (undo-tree-id28 . -28) (undo-tree-id29 . -28) (undo-tree-id30 . -61) (undo-tree-id31 . -61) (undo-tree-id32 . 17) (undo-tree-id33 . 18) (undo-tree-id34 . 18) (undo-tree-id35 . -43) (undo-tree-id36 . -43) (undo-tree-id37 . -43) (undo-tree-id38 . -61)) nil (23088 19268 861337 234000) 0 nil]) ((1550 . 1563) (1547 . 1550) (#(" " 0 1 (fontified nil)) . 1547) (1519 . 1522) (#("    " 0 4 (fontified nil)) . 1519) (1547 . 1548)) nil (23088 19268 861341 769000) 0 nil]) ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 1564) (undo-tree-id39 . 1) (undo-tree-id40 . -1)) nil (23088 19268 861344 537000) 0 nil]) ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . 1536) (undo-tree-id41 . 1) (undo-tree-id42 . -1) (t 23088 19204 335243 775000)) nil (23088 19268 861346 916000) 0 nil]) ((1479 . 1573) (#("  if (req.session.passport.user || req.path === ( \"/login\" || '/auth/facebook' )) {
" 0 2 (fontified t) 2 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-3-face)) 6 46 (fontified t) 46 48 (fontified t) 48 49 (fontified t face (rainbow-delimiters-depth-4-face)) 49 50 (fontified t) 50 58 (fontified t face font-lock-string-face) 58 62 (fontified t) 62 77 (fontified t face font-lock-string-face) 77 78 (fontified t face font-lock-string-face) 78 79 (fontified t) 79 80 (fontified t face (rainbow-delimiters-depth-4-face)) 80 81 (fontified t face (rainbow-delimiters-depth-3-face)) 81 82 (fontified t) 82 83 (fontified t face (rainbow-delimiters-depth-3-face)) 83 84 (fontified t)) . 1479) (undo-tree-id11 . -84) (undo-tree-id12 . -84) (undo-tree-id13 . 4) (undo-tree-id14 . -77) (undo-tree-id15 . -48) (undo-tree-id16 . 4) (undo-tree-id17 . -77) (undo-tree-id18 . -48) (undo-tree-id19 . 36) (undo-tree-id20 . 36) (undo-tree-id21 . -48) (undo-tree-id22 . -48) (undo-tree-id23 . -48) (undo-tree-id24 . -84)) nil (23088 19204 294274 108000) 0 nil]) ((1557 . 1559) (1527 . 1529)) nil (23088 19204 294278 145000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1555) (undo-tree-id25 . -1) 1556 (1555 . 1556) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1555) (1554 . 1555) (#(" " 0 1 (fontified nil)) . -1554) (1554 . 1555) (#("'" 0 1 (fontified nil face font-lock-string-face)) . -1554) (1547 . 1555) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1547) (undo-tree-id26 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -1548) (undo-tree-id27 . -1) 1549 (1540 . 1549) (1539 . 1541) (#("'" 0 1 (fontified nil)) . -1539) (1535 . 1540) (t 23088 18622 429244 809000)) nil (23088 19204 294284 456000) 0 nil]) ((464 . 505) (#("const login = require('./routes/login');
" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 11 (fontified t face font-lock-variable-name-face) 11 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-1-face)) 22 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 39 (fontified t face (rainbow-delimiters-depth-1-face)) 39 40 (fontified t) 40 41 (fontified t)) . 464) (undo-tree-id0 . -39) (undo-tree-id1 . -39) (undo-tree-id2 . -41) (undo-tree-id3 . -41) (undo-tree-id4 . -41)) nil (23088 18622 377103 230000) 0 nil]) ((1701 . 1705) (1700 . 1701) (#("facebook" 0 8 (fontified t)) . 1700)) nil (23088 18622 377106 699000) 0 nil]) ((1692 . 1697) (#("auth/facebook" 0 13 (fontified t face font-lock-string-face)) . 1692) (undo-tree-id5 . -12) (undo-tree-id6 . -12) (undo-tree-id7 . -12) (undo-tree-id8 . -12) 1704) nil (23088 18622 377110 942000) 0 nil]) ((nil rear-nonsticky nil 1681 . 1682) (#("
" 0 1 (fontified nil)) . -1718) (1681 . 1719) 1645) nil (23088 18622 377112 767000) 0 nil]) ((503 . 504) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 503) (502 . 503) (#(" " 0 1 (fontified nil)) . -502) (502 . 503) (#(")" 0 1 (fontified nil face font-lock-string-face)) . -502) (502 . 503) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 502) (501 . 502) (#(" " 0 1 (fontified nil)) . -501) (501 . 502) (#("'" 0 1 (fontified nil face font-lock-string-face)) . -501) (495 . 502) (#("." 0 1 (fontified t face font-lock-string-face)) . -495) (undo-tree-id9 . -1) 496 (488 . 496) (487 . 488) (#("/" 0 1 (fontified t face font-lock-string-face)) . -487) (undo-tree-id10 . -1) 488 (487 . 488) (486 . 488) (#("'" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -486) (486 . 487) (485 . 487) (#("(" 0 1 (fontified nil)) . -485) (485 . 486) (464 . 485) (463 . 464) (t 23088 18514 664157 235000) 414) nil (23088 18622 377121 468000) 0 nil]) nil nil (23088 18622 377124 620000) 0 nil] #1# 5558 50 nil]